{"payload":{"allShortcutsEnabled":false,"fileTree":{"dist":{"items":[{"name":"jquery.mask.js","path":"dist/jquery.mask.js","contentType":"file"},{"name":"jquery.mask.min.js","path":"dist/jquery.mask.min.js","contentType":"file"}],"totalCount":2},"":{"items":[{"name":"dist","path":"dist","contentType":"directory"},{"name":"src","path":"src","contentType":"directory"},{"name":"test","path":"test","contentType":"directory"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":".jshintrc","path":".jshintrc","contentType":"file"},{"name":".ruby-version","path":".ruby-version","contentType":"file"},{"name":".travis.yml","path":".travis.yml","contentType":"file"},{"name":"CHANGELOG.md","path":"CHANGELOG.md","contentType":"file"},{"name":"CONTRIBUTING.md","path":"CONTRIBUTING.md","contentType":"file"},{"name":"Dockerfile","path":"Dockerfile","contentType":"file"},{"name":"Gruntfile.js","path":"Gruntfile.js","contentType":"file"},{"name":"ISSUE_TEMPLATE.md","path":"ISSUE_TEMPLATE.md","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"bower.json","path":"bower.json","contentType":"file"},{"name":"component.json","path":"component.json","contentType":"file"},{"name":"composer.json","path":"composer.json","contentType":"file"},{"name":"deploy.rb","path":"deploy.rb","contentType":"file"},{"name":"docker-compose.yml","path":"docker-compose.yml","contentType":"file"},{"name":"package-lock.json","path":"package-lock.json","contentType":"file"},{"name":"package.js","path":"package.js","contentType":"file"},{"name":"package.json","path":"package.json","contentType":"file"}],"totalCount":22}},"fileTreeProcessingTime":31.856148,"foldersToFetch":[],"reducedMotionEnabled":null,"repo":{"id":3674459,"defaultBranch":"master","name":"jQuery-Mask-Plugin","ownerLogin":"igorescobar","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2012-03-09T20:25:25.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/24032?v=4","public":true,"private":false,"isOrgOwned":false},"refInfo":{"name":"master","listCacheKey":"v0:1670434684.0069802","canEdit":false,"refType":"branch","currentOid":"bfd14b5dc61b239a69458242b0c7014f1c17b8a9"},"path":"dist/jquery.mask.min.js","currentUser":null,"blob":{"rawBlob":"// jQuery Mask Plugin v1.14.16\n// github.com/igorescobar/jQuery-Mask-Plugin\nvar $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(a,n,f){a instanceof String&&(a=String(a));for(var p=a.length,k=0;k<p;k++){var b=a[k];if(n.call(f,b,k,a))return{i:k,v:b}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;\n$jscomp.defineProperty=$jscomp.ASSUME_ES5||\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,n,f){a!=Array.prototype&&a!=Object.prototype&&(a[n]=f.value)};$jscomp.getGlobal=function(a){return\"undefined\"!=typeof window&&window===a?a:\"undefined\"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);\n$jscomp.polyfill=function(a,n,f,p){if(n){f=$jscomp.global;a=a.split(\".\");for(p=0;p<a.length-1;p++){var k=a[p];k in f||(f[k]={});f=f[k]}a=a[a.length-1];p=f[a];n=n(p);n!=p&&null!=n&&$jscomp.defineProperty(f,a,{configurable:!0,writable:!0,value:n})}};$jscomp.polyfill(\"Array.prototype.find\",function(a){return a?a:function(a,f){return $jscomp.findInternal(this,a,f).v}},\"es6\",\"es3\");\n(function(a,n,f){\"function\"===typeof define&&define.amd?define([\"jquery\"],a):\"object\"===typeof exports&&\"undefined\"===typeof Meteor?module.exports=a(require(\"jquery\")):a(n||f)})(function(a){var n=function(b,d,e){var c={invalid:[],getCaret:function(){try{var a=0,r=b.get(0),h=document.selection,d=r.selectionStart;if(h&&-1===navigator.appVersion.indexOf(\"MSIE 10\")){var e=h.createRange();e.moveStart(\"character\",-c.val().length);a=e.text.length}else if(d||\"0\"===d)a=d;return a}catch(C){}},setCaret:function(a){try{if(b.is(\":focus\")){var c=\nb.get(0);if(c.setSelectionRange)c.setSelectionRange(a,a);else{var g=c.createTextRange();g.collapse(!0);g.moveEnd(\"character\",a);g.moveStart(\"character\",a);g.select()}}}catch(B){}},events:function(){b.on(\"keydown.mask\",function(a){b.data(\"mask-keycode\",a.keyCode||a.which);b.data(\"mask-previus-value\",b.val());b.data(\"mask-previus-caret-pos\",c.getCaret());c.maskDigitPosMapOld=c.maskDigitPosMap}).on(a.jMaskGlobals.useInput?\"input.mask\":\"keyup.mask\",c.behaviour).on(\"paste.mask drop.mask\",function(){setTimeout(function(){b.keydown().keyup()},\n100)}).on(\"change.mask\",function(){b.data(\"changed\",!0)}).on(\"blur.mask\",function(){f===c.val()||b.data(\"changed\")||b.trigger(\"change\");b.data(\"changed\",!1)}).on(\"blur.mask\",function(){f=c.val()}).on(\"focus.mask\",function(b){!0===e.selectOnFocus&&a(b.target).select()}).on(\"focusout.mask\",function(){e.clearIfNotMatch&&!k.test(c.val())&&c.val(\"\")})},getRegexMask:function(){for(var a=[],b,c,e,t,f=0;f<d.length;f++)(b=l.translation[d.charAt(f)])?(c=b.pattern.toString().replace(/.{1}$|^.{1}/g,\"\"),e=b.optional,\n(b=b.recursive)?(a.push(d.charAt(f)),t={digit:d.charAt(f),pattern:c}):a.push(e||b?c+\"?\":c)):a.push(d.charAt(f).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\"));a=a.join(\"\");t&&(a=a.replace(new RegExp(\"(\"+t.digit+\"(.*\"+t.digit+\")?)\"),\"($1)?\").replace(new RegExp(t.digit,\"g\"),t.pattern));return new RegExp(a)},destroyEvents:function(){b.off(\"input keydown keyup paste drop blur focusout \".split(\" \").join(\".mask \"))},val:function(a){var c=b.is(\"input\")?\"val\":\"text\";if(0<arguments.length){if(b[c]()!==a)b[c](a);\nc=b}else c=b[c]();return c},calculateCaretPosition:function(a){var d=c.getMasked(),h=c.getCaret();if(a!==d){var e=b.data(\"mask-previus-caret-pos\")||0;d=d.length;var g=a.length,f=a=0,l=0,k=0,m;for(m=h;m<d&&c.maskDigitPosMap[m];m++)f++;for(m=h-1;0<=m&&c.maskDigitPosMap[m];m--)a++;for(m=h-1;0<=m;m--)c.maskDigitPosMap[m]&&l++;for(m=e-1;0<=m;m--)c.maskDigitPosMapOld[m]&&k++;h>g?h=10*d:e>=h&&e!==g?c.maskDigitPosMapOld[h]||(e=h,h=h-(k-l)-a,c.maskDigitPosMap[h]&&(h=e)):h>e&&(h=h+(l-k)+f)}return h},behaviour:function(d){d=\nd||window.event;c.invalid=[];var e=b.data(\"mask-keycode\");if(-1===a.inArray(e,l.byPassKeys)){e=c.getMasked();var h=c.getCaret(),g=b.data(\"mask-previus-value\")||\"\";setTimeout(function(){c.setCaret(c.calculateCaretPosition(g))},a.jMaskGlobals.keyStrokeCompensation);c.val(e);c.setCaret(h);return c.callbacks(d)}},getMasked:function(a,b){var h=[],f=void 0===b?c.val():b+\"\",g=0,k=d.length,n=0,p=f.length,m=1,r=\"push\",u=-1,w=0;b=[];if(e.reverse){r=\"unshift\";m=-1;var x=0;g=k-1;n=p-1;var A=function(){return-1<\ng&&-1<n}}else x=k-1,A=function(){return g<k&&n<p};for(var z;A();){var y=d.charAt(g),v=f.charAt(n),q=l.translation[y];if(q)v.match(q.pattern)?(h[r](v),q.recursive&&(-1===u?u=g:g===x&&g!==u&&(g=u-m),x===u&&(g-=m)),g+=m):v===z?(w--,z=void 0):q.optional?(g+=m,n-=m):q.fallback?(h[r](q.fallback),g+=m,n-=m):c.invalid.push({p:n,v:v,e:q.pattern}),n+=m;else{if(!a)h[r](y);v===y?(b.push(n),n+=m):(z=y,b.push(n+w),w++);g+=m}}a=d.charAt(x);k!==p+1||l.translation[a]||h.push(a);h=h.join(\"\");c.mapMaskdigitPositions(h,\nb,p);return h},mapMaskdigitPositions:function(a,b,d){a=e.reverse?a.length-d:0;c.maskDigitPosMap={};for(d=0;d<b.length;d++)c.maskDigitPosMap[b[d]+a]=1},callbacks:function(a){var g=c.val(),h=g!==f,k=[g,a,b,e],l=function(a,b,c){\"function\"===typeof e[a]&&b&&e[a].apply(this,c)};l(\"onChange\",!0===h,k);l(\"onKeyPress\",!0===h,k);l(\"onComplete\",g.length===d.length,k);l(\"onInvalid\",0<c.invalid.length,[g,a,b,c.invalid,e])}};b=a(b);var l=this,f=c.val(),k;d=\"function\"===typeof d?d(c.val(),void 0,b,e):d;l.mask=\nd;l.options=e;l.remove=function(){var a=c.getCaret();l.options.placeholder&&b.removeAttr(\"placeholder\");b.data(\"mask-maxlength\")&&b.removeAttr(\"maxlength\");c.destroyEvents();c.val(l.getCleanVal());c.setCaret(a);return b};l.getCleanVal=function(){return c.getMasked(!0)};l.getMaskedVal=function(a){return c.getMasked(!1,a)};l.init=function(g){g=g||!1;e=e||{};l.clearIfNotMatch=a.jMaskGlobals.clearIfNotMatch;l.byPassKeys=a.jMaskGlobals.byPassKeys;l.translation=a.extend({},a.jMaskGlobals.translation,e.translation);\nl=a.extend(!0,{},l,e);k=c.getRegexMask();if(g)c.events(),c.val(c.getMasked());else{e.placeholder&&b.attr(\"placeholder\",e.placeholder);b.data(\"mask\")&&b.attr(\"autocomplete\",\"off\");g=0;for(var f=!0;g<d.length;g++){var h=l.translation[d.charAt(g)];if(h&&h.recursive){f=!1;break}}f&&b.attr(\"maxlength\",d.length).data(\"mask-maxlength\",!0);c.destroyEvents();c.events();g=c.getCaret();c.val(c.getMasked());c.setCaret(g)}};l.init(!b.is(\"input\"))};a.maskWatchers={};var f=function(){var b=a(this),d={},e=b.attr(\"data-mask\");\nb.attr(\"data-mask-reverse\")&&(d.reverse=!0);b.attr(\"data-mask-clearifnotmatch\")&&(d.clearIfNotMatch=!0);\"true\"===b.attr(\"data-mask-selectonfocus\")&&(d.selectOnFocus=!0);if(p(b,e,d))return b.data(\"mask\",new n(this,e,d))},p=function(b,d,e){e=e||{};var c=a(b).data(\"mask\"),f=JSON.stringify;b=a(b).val()||a(b).text();try{return\"function\"===typeof d&&(d=d(b)),\"object\"!==typeof c||f(c.options)!==f(e)||c.mask!==d}catch(w){}},k=function(a){var b=document.createElement(\"div\");a=\"on\"+a;var e=a in b;e||(b.setAttribute(a,\n\"return;\"),e=\"function\"===typeof b[a]);return e};a.fn.mask=function(b,d){d=d||{};var e=this.selector,c=a.jMaskGlobals,f=c.watchInterval;c=d.watchInputs||c.watchInputs;var k=function(){if(p(this,b,d))return a(this).data(\"mask\",new n(this,b,d))};a(this).each(k);e&&\"\"!==e&&c&&(clearInterval(a.maskWatchers[e]),a.maskWatchers[e]=setInterval(function(){a(document).find(e).each(k)},f));return this};a.fn.masked=function(a){return this.data(\"mask\").getMaskedVal(a)};a.fn.unmask=function(){clearInterval(a.maskWatchers[this.selector]);\ndelete a.maskWatchers[this.selector];return this.each(function(){var b=a(this).data(\"mask\");b&&b.remove().removeData(\"mask\")})};a.fn.cleanVal=function(){return this.data(\"mask\").getCleanVal()};a.applyDataMask=function(b){b=b||a.jMaskGlobals.maskElements;(b instanceof a?b:a(b)).filter(a.jMaskGlobals.dataMaskAttr).each(f)};k={maskElements:\"input,td,span,div\",dataMaskAttr:\"*[data-mask]\",dataMask:!0,watchInterval:300,watchInputs:!0,keyStrokeCompensation:10,useInput:!/Chrome\\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent)&&\nk(\"input\"),watchDataMask:!1,byPassKeys:[9,16,17,18,36,37,38,39,40,91],translation:{0:{pattern:/\\d/},9:{pattern:/\\d/,optional:!0},\"#\":{pattern:/\\d/,recursive:!0},A:{pattern:/[a-zA-Z0-9]/},S:{pattern:/[a-zA-Z]/}}};a.jMaskGlobals=a.jMaskGlobals||{};k=a.jMaskGlobals=a.extend(!0,{},k,a.jMaskGlobals);k.dataMask&&a.applyDataMask();setInterval(function(){a.jMaskGlobals.watchDataMask&&a.applyDataMask()},k.watchInterval)},window.jQuery,window.Zepto);\n","colorizedLines":["<span class=pl-c>// jQuery Mask Plugin v1.14.16</span>","<span class=pl-c>// github.com/igorescobar/jQuery-Mask-Plugin</span>","<span class=pl-k>var</span> <span class=pl-s1>$jscomp</span><span class=pl-c1>=</span><span class=pl-s1>$jscomp</span><span class=pl-c1>||</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-c1>scope</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-en>findInternal</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>n</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span> <span class=pl-k>instanceof</span> <span class=pl-v>String</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-v>String</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>p</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-c1>&lt;</span><span class=pl-s1>p</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>k</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>n</span><span class=pl-kos>.</span><span class=pl-en>call</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span><span class=pl-kos>{</span><span class=pl-c1>i</span>:<span class=pl-s1>k</span><span class=pl-kos>,</span><span class=pl-c1>v</span>:<span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>return</span><span class=pl-kos>{</span><span class=pl-c1>i</span>:<span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-c1>v</span>:<span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-c1>ASSUME_ES5</span><span class=pl-c1>=</span><span class=pl-c1>!</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-c1>ASSUME_NO_NATIVE_MAP</span><span class=pl-c1>=</span><span class=pl-c1>!</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-c1>ASSUME_NO_NATIVE_SET</span><span class=pl-c1>=</span><span class=pl-c1>!</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-c1>SIMPLE_FROUND_POLYFILL</span><span class=pl-c1>=</span><span class=pl-c1>!</span><span class=pl-c1>1</span><span class=pl-kos>;</span>","<span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-c1>defineProperty</span><span class=pl-c1>=</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-c1>ASSUME_ES5</span><span class=pl-c1>||</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>==</span><span class=pl-k>typeof</span> <span class=pl-v>Object</span><span class=pl-kos>.</span><span class=pl-c1>defineProperties</span>?<span class=pl-v>Object</span><span class=pl-kos>.</span><span class=pl-c1>defineProperty</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>n</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>!=</span><span class=pl-v>Array</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-c1>!=</span><span class=pl-v>Object</span><span class=pl-kos>.</span><span class=pl-c1>prototype</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>n</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>value</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-en>getGlobal</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;undefined&quot;</span><span class=pl-c1>!=</span><span class=pl-k>typeof</span> <span class=pl-smi>window</span><span class=pl-c1>&amp;&amp;</span><span class=pl-smi>window</span><span class=pl-c1>===</span><span class=pl-s1>a</span>?<span class=pl-s1>a</span>:<span class=pl-s>&quot;undefined&quot;</span><span class=pl-c1>!=</span><span class=pl-k>typeof</span> <span class=pl-s1>global</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>null</span><span class=pl-c1>!=</span><span class=pl-s1>global</span>?<span class=pl-s1>global</span>:<span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-c1>global</span><span class=pl-c1>=</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-en>getGlobal</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>)</span><span class=pl-kos>;</span>","<span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-en>polyfill</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>n</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>,</span><span class=pl-s1>p</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>n</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-c1>global</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>split</span><span class=pl-kos>(</span><span class=pl-s>&quot;.&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>p</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>p</span><span class=pl-c1>&lt;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>p</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>p</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>k</span> <span class=pl-k>in</span> <span class=pl-s1>f</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>[</span><span class=pl-s1>k</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>[</span><span class=pl-s1>k</span><span class=pl-kos>]</span><span class=pl-kos>}</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>p</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>n</span><span class=pl-c1>=</span><span class=pl-s1>n</span><span class=pl-kos>(</span><span class=pl-s1>p</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>n</span><span class=pl-c1>!=</span><span class=pl-s1>p</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>null</span><span class=pl-c1>!=</span><span class=pl-s1>n</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-en>defineProperty</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-c1>configurable</span>:<span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>writable</span>:<span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>value</span>:<span class=pl-s1>n</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-en>polyfill</span><span class=pl-kos>(</span><span class=pl-s>&quot;Array.prototype.find&quot;</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>a</span>?<span class=pl-s1>a</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>$jscomp</span><span class=pl-kos>.</span><span class=pl-en>findInternal</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>v</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s>&quot;es6&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;es3&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span>","<span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>n</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>define</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>define</span><span class=pl-kos>.</span><span class=pl-c1>amd</span>?<span class=pl-en>define</span><span class=pl-kos>(</span><span class=pl-kos>[</span><span class=pl-s>&quot;jquery&quot;</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span>:<span class=pl-s>&quot;object&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>exports</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s>&quot;undefined&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-v>Meteor</span>?<span class=pl-smi>module</span><span class=pl-kos>.</span><span class=pl-c1>exports</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-en>require</span><span class=pl-kos>(</span><span class=pl-s>&quot;jquery&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span>:<span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-s1>n</span><span class=pl-c1>||</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-en>n</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>invalid</span>:<span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-en>getCaret</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>get</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-smi>document</span><span class=pl-kos>.</span><span class=pl-c1>selection</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>r</span><span class=pl-kos>.</span><span class=pl-c1>selectionStart</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>h</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-c1>===</span><span class=pl-s1>navigator</span><span class=pl-kos>.</span><span class=pl-c1>appVersion</span><span class=pl-kos>.</span><span class=pl-en>indexOf</span><span class=pl-kos>(</span><span class=pl-s>&quot;MSIE 10&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>h</span><span class=pl-kos>.</span><span class=pl-en>createRange</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-en>moveStart</span><span class=pl-kos>(</span><span class=pl-s>&quot;character&quot;</span><span class=pl-kos>,</span><span class=pl-c1>-</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>text</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>||</span><span class=pl-s>&quot;0&quot;</span><span class=pl-c1>===</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-v>C</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>setCaret</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>is</span><span class=pl-kos>(</span><span class=pl-s>&quot;:focus&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span>","<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>get</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>setSelectionRange</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>setSelectionRange</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>createTextRange</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-en>collapse</span><span class=pl-kos>(</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-en>moveEnd</span><span class=pl-kos>(</span><span class=pl-s>&quot;character&quot;</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-en>moveStart</span><span class=pl-kos>(</span><span class=pl-s>&quot;character&quot;</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-en>select</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-v>B</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>events</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>on</span><span class=pl-kos>(</span><span class=pl-s>&quot;keydown.mask&quot;</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask-keycode&quot;</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>keyCode</span><span class=pl-c1>||</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>which</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask-previus-value&quot;</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask-previus-caret-pos&quot;</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getCaret</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>maskDigitPosMapOld</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>maskDigitPosMap</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>on</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-kos>.</span><span class=pl-c1>useInput</span>?<span class=pl-s>&quot;input.mask&quot;</span>:<span class=pl-s>&quot;keyup.mask&quot;</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>behaviour</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>on</span><span class=pl-kos>(</span><span class=pl-s>&quot;paste.mask drop.mask&quot;</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>setTimeout</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>keydown</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>keyup</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span>","<span class=pl-c1>100</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>on</span><span class=pl-kos>(</span><span class=pl-s>&quot;change.mask&quot;</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;changed&quot;</span><span class=pl-kos>,</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>on</span><span class=pl-kos>(</span><span class=pl-s>&quot;blur.mask&quot;</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>f</span><span class=pl-c1>===</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;changed&quot;</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>trigger</span><span class=pl-kos>(</span><span class=pl-s>&quot;change&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;changed&quot;</span><span class=pl-kos>,</span><span class=pl-c1>!</span><span class=pl-c1>1</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>on</span><span class=pl-kos>(</span><span class=pl-s>&quot;blur.mask&quot;</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>on</span><span class=pl-kos>(</span><span class=pl-s>&quot;focus.mask&quot;</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>selectOnFocus</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>target</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>select</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>on</span><span class=pl-kos>(</span><span class=pl-s>&quot;focusout.mask&quot;</span><span class=pl-kos>,</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>clearIfNotMatch</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>!</span><span class=pl-s1>k</span><span class=pl-kos>.</span><span class=pl-en>test</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>getRegexMask</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>t</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>f</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>translation</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>]</span><span class=pl-kos>)</span>?<span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>pattern</span><span class=pl-kos>.</span><span class=pl-en>toString</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>replace</span><span class=pl-kos>(</span><span class=pl-pds><span class=pl-c1>/</span>.<span class=pl-kos>{</span>1<span class=pl-kos>}</span><span class=pl-cce>$</span><span class=pl-c1>|</span><span class=pl-cce>^</span>.<span class=pl-kos>{</span>1<span class=pl-kos>}</span><span class=pl-c1>/</span>g</span><span class=pl-kos>,</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>optional</span><span class=pl-kos>,</span>","<span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>recursive</span><span class=pl-kos>)</span>?<span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>t</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>digit</span>:<span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>pattern</span>:<span class=pl-s1>c</span><span class=pl-kos>}</span><span class=pl-kos>)</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-c1>||</span><span class=pl-s1>b</span>?<span class=pl-s1>c</span><span class=pl-c1>+</span><span class=pl-s>&quot;?&quot;</span>:<span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>)</span>:<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>replace</span><span class=pl-kos>(</span><span class=pl-pds><span class=pl-c1>/</span><span class=pl-kos>[</span>-<span class=pl-cce>\\/</span><span class=pl-cce>\\\\</span>^$*+?.()|[<span class=pl-cce>\\]</span>{}<span class=pl-kos>]</span><span class=pl-c1>/</span>g</span><span class=pl-kos>,</span><span class=pl-s>&quot;\\\\$&amp;&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>join</span><span class=pl-kos>(</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>t</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>replace</span><span class=pl-kos>(</span><span class=pl-k>new</span> <span class=pl-v>RegExp</span><span class=pl-kos>(</span><span class=pl-s>&quot;(&quot;</span><span class=pl-c1>+</span><span class=pl-s1>t</span><span class=pl-kos>.</span><span class=pl-c1>digit</span><span class=pl-c1>+</span><span class=pl-s>&quot;(.*&quot;</span><span class=pl-c1>+</span><span class=pl-s1>t</span><span class=pl-kos>.</span><span class=pl-c1>digit</span><span class=pl-c1>+</span><span class=pl-s>&quot;)?)&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s>&quot;($1)?&quot;</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>replace</span><span class=pl-kos>(</span><span class=pl-k>new</span> <span class=pl-v>RegExp</span><span class=pl-kos>(</span><span class=pl-s1>t</span><span class=pl-kos>.</span><span class=pl-c1>digit</span><span class=pl-kos>,</span><span class=pl-s>&quot;g&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>t</span><span class=pl-kos>.</span><span class=pl-c1>pattern</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-k>new</span> <span class=pl-v>RegExp</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>destroyEvents</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>off</span><span class=pl-kos>(</span><span class=pl-s>&quot;input keydown keyup paste drop blur focusout &quot;</span><span class=pl-kos>.</span><span class=pl-en>split</span><span class=pl-kos>(</span><span class=pl-s>&quot; &quot;</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>join</span><span class=pl-kos>(</span><span class=pl-s>&quot;.mask &quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>val</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>is</span><span class=pl-kos>(</span><span class=pl-s>&quot;input&quot;</span><span class=pl-kos>)</span>?<span class=pl-s>&quot;val&quot;</span>:<span class=pl-s>&quot;text&quot;</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-smi>arguments</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>!==</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span>","<span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>c</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>calculateCaretPosition</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getMasked</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getCaret</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-c1>!==</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask-previus-caret-pos&quot;</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>l</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>m</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-s1>h</span><span class=pl-kos>;</span><span class=pl-s1>m</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>maskDigitPosMap</span><span class=pl-kos>[</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>m</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-s1>f</span><span class=pl-c1>++</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-s1>h</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-c1>0</span><span class=pl-c1>&lt;=</span><span class=pl-s1>m</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>maskDigitPosMap</span><span class=pl-kos>[</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-s1>m</span><span class=pl-c1>--</span><span class=pl-kos>)</span><span class=pl-s1>a</span><span class=pl-c1>++</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-s1>h</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-c1>0</span><span class=pl-c1>&lt;=</span><span class=pl-s1>m</span><span class=pl-kos>;</span><span class=pl-s1>m</span><span class=pl-c1>--</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>maskDigitPosMap</span><span class=pl-kos>[</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>l</span><span class=pl-c1>++</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-c1>0</span><span class=pl-c1>&lt;=</span><span class=pl-s1>m</span><span class=pl-kos>;</span><span class=pl-s1>m</span><span class=pl-c1>--</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>maskDigitPosMapOld</span><span class=pl-kos>[</span><span class=pl-s1>m</span><span class=pl-kos>]</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>k</span><span class=pl-c1>++</span><span class=pl-kos>;</span><span class=pl-s1>h</span><span class=pl-c1>&gt;</span><span class=pl-s1>g</span>?<span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-c1>10</span><span class=pl-c1>*</span><span class=pl-s1>d</span>:<span class=pl-s1>e</span><span class=pl-c1>&gt;=</span><span class=pl-s1>h</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span><span class=pl-c1>!==</span><span class=pl-s1>g</span>?<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>maskDigitPosMapOld</span><span class=pl-kos>[</span><span class=pl-s1>h</span><span class=pl-kos>]</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>h</span><span class=pl-kos>,</span><span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-s1>h</span><span class=pl-c1>-</span><span class=pl-kos>(</span><span class=pl-s1>k</span><span class=pl-c1>-</span><span class=pl-s1>l</span><span class=pl-kos>)</span><span class=pl-c1>-</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>maskDigitPosMap</span><span class=pl-kos>[</span><span class=pl-s1>h</span><span class=pl-kos>]</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>)</span>:<span class=pl-s1>h</span><span class=pl-c1>&gt;</span><span class=pl-s1>e</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-s1>h</span><span class=pl-c1>+</span><span class=pl-kos>(</span><span class=pl-s1>l</span><span class=pl-c1>-</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-c1>+</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-k>return</span> <span class=pl-s1>h</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>behaviour</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>d</span><span class=pl-c1>=</span>","<span class=pl-s1>d</span><span class=pl-c1>||</span><span class=pl-smi>window</span><span class=pl-kos>.</span><span class=pl-c1>event</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>invalid</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask-keycode&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-c1>===</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>inArray</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>byPassKeys</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getMasked</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getCaret</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask-previus-value&quot;</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>;</span><span class=pl-en>setTimeout</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>setCaret</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>calculateCaretPosition</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-kos>.</span><span class=pl-c1>keyStrokeCompensation</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>setCaret</span><span class=pl-kos>(</span><span class=pl-s1>h</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>callbacks</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>getMasked</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>b</span>?<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-kos>)</span>:<span class=pl-s1>b</span><span class=pl-c1>+</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>,</span><span class=pl-s1>n</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>p</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>,</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-s>&quot;push&quot;</span><span class=pl-kos>,</span><span class=pl-s1>u</span><span class=pl-c1>=</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>w</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>reverse</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>r</span><span class=pl-c1>=</span><span class=pl-s>&quot;unshift&quot;</span><span class=pl-kos>;</span><span class=pl-s1>m</span><span class=pl-c1>=</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>x</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>k</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>n</span><span class=pl-c1>=</span><span class=pl-s1>p</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-v>A</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-c1>&lt;</span>","<span class=pl-s1>g</span><span class=pl-c1>&amp;&amp;</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-c1>&lt;</span><span class=pl-s1>n</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-k>else</span> <span class=pl-s1>x</span><span class=pl-c1>=</span><span class=pl-s1>k</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-v>A</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>g</span><span class=pl-c1>&lt;</span><span class=pl-s1>k</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>n</span><span class=pl-c1>&lt;</span><span class=pl-s1>p</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>z</span><span class=pl-kos>;</span><span class=pl-v>A</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>y</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>v</span><span class=pl-c1>=</span><span class=pl-s1>f</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-s1>n</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>q</span><span class=pl-c1>=</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>translation</span><span class=pl-kos>[</span><span class=pl-s1>y</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>q</span><span class=pl-kos>)</span><span class=pl-s1>v</span><span class=pl-kos>.</span><span class=pl-en>match</span><span class=pl-kos>(</span><span class=pl-s1>q</span><span class=pl-kos>.</span><span class=pl-c1>pattern</span><span class=pl-kos>)</span>?<span class=pl-kos>(</span><span class=pl-s1>h</span><span class=pl-kos>[</span><span class=pl-s1>r</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>v</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>q</span><span class=pl-kos>.</span><span class=pl-c1>recursive</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-c1>-</span><span class=pl-c1>1</span><span class=pl-c1>===</span><span class=pl-s1>u</span>?<span class=pl-s1>u</span><span class=pl-c1>=</span><span class=pl-s1>g</span>:<span class=pl-s1>g</span><span class=pl-c1>===</span><span class=pl-s1>x</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>g</span><span class=pl-c1>!==</span><span class=pl-s1>u</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>u</span><span class=pl-c1>-</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>x</span><span class=pl-c1>===</span><span class=pl-s1>u</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-c1>-=</span><span class=pl-s1>m</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-c1>+=</span><span class=pl-s1>m</span><span class=pl-kos>)</span>:<span class=pl-s1>v</span><span class=pl-c1>===</span><span class=pl-s1>z</span>?<span class=pl-kos>(</span><span class=pl-s1>w</span><span class=pl-c1>--</span><span class=pl-kos>,</span><span class=pl-s1>z</span><span class=pl-c1>=</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-kos>)</span>:<span class=pl-s1>q</span><span class=pl-kos>.</span><span class=pl-c1>optional</span>?<span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-c1>+=</span><span class=pl-s1>m</span><span class=pl-kos>,</span><span class=pl-s1>n</span><span class=pl-c1>-=</span><span class=pl-s1>m</span><span class=pl-kos>)</span>:<span class=pl-s1>q</span><span class=pl-kos>.</span><span class=pl-c1>fallback</span>?<span class=pl-kos>(</span><span class=pl-s1>h</span><span class=pl-kos>[</span><span class=pl-s1>r</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>q</span><span class=pl-kos>.</span><span class=pl-c1>fallback</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-c1>+=</span><span class=pl-s1>m</span><span class=pl-kos>,</span><span class=pl-s1>n</span><span class=pl-c1>-=</span><span class=pl-s1>m</span><span class=pl-kos>)</span>:<span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>invalid</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-kos>{</span><span class=pl-c1>p</span>:<span class=pl-s1>n</span><span class=pl-kos>,</span><span class=pl-c1>v</span>:<span class=pl-s1>v</span><span class=pl-kos>,</span><span class=pl-c1>e</span>:<span class=pl-s1>q</span><span class=pl-kos>.</span><span class=pl-c1>pattern</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>n</span><span class=pl-c1>+=</span><span class=pl-s1>m</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-c1>!</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-s1>h</span><span class=pl-kos>[</span><span class=pl-s1>r</span><span class=pl-kos>]</span><span class=pl-kos>(</span><span class=pl-s1>y</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>v</span><span class=pl-c1>===</span><span class=pl-s1>y</span>?<span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>n</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>n</span><span class=pl-c1>+=</span><span class=pl-s1>m</span><span class=pl-kos>)</span>:<span class=pl-kos>(</span><span class=pl-s1>z</span><span class=pl-c1>=</span><span class=pl-s1>y</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>n</span><span class=pl-c1>+</span><span class=pl-s1>w</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>w</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>+=</span><span class=pl-s1>m</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-s1>x</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-c1>!==</span><span class=pl-s1>p</span><span class=pl-c1>+</span><span class=pl-c1>1</span><span class=pl-c1>||</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>translation</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>||</span><span class=pl-s1>h</span><span class=pl-kos>.</span><span class=pl-en>push</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-s1>h</span><span class=pl-kos>.</span><span class=pl-en>join</span><span class=pl-kos>(</span><span class=pl-s>&quot;&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>mapMaskdigitPositions</span><span class=pl-kos>(</span><span class=pl-s1>h</span><span class=pl-kos>,</span>","<span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>p</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>h</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>mapMaskdigitPositions</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>reverse</span>?<span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>-</span><span class=pl-s1>d</span>:<span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>maskDigitPosMap</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>&lt;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>maskDigitPosMap</span><span class=pl-kos>[</span><span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>]</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-c1>1</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>callbacks</span>:<span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-s1>g</span><span class=pl-c1>!==</span><span class=pl-s1>f</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-kos>[</span><span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-en>l</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>e</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>e</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>.</span><span class=pl-en>apply</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-en>l</span><span class=pl-kos>(</span><span class=pl-s>&quot;onChange&quot;</span><span class=pl-kos>,</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>h</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>l</span><span class=pl-kos>(</span><span class=pl-s>&quot;onKeyPress&quot;</span><span class=pl-kos>,</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-c1>===</span><span class=pl-s1>h</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>l</span><span class=pl-kos>(</span><span class=pl-s>&quot;onComplete&quot;</span><span class=pl-kos>,</span><span class=pl-s1>g</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-c1>===</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>l</span><span class=pl-kos>(</span><span class=pl-s>&quot;onInvalid&quot;</span><span class=pl-kos>,</span><span class=pl-c1>0</span><span class=pl-c1>&lt;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>invalid</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>,</span><span class=pl-kos>[</span><span class=pl-s1>g</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>invalid</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>l</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>k</span><span class=pl-kos>;</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>d</span>?<span class=pl-s1>d</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-k>void</span> <span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span>:<span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>mask</span><span class=pl-c1>=</span>","<span class=pl-s1>d</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>options</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-en>remove</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getCaret</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>options</span><span class=pl-kos>.</span><span class=pl-c1>placeholder</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>removeAttr</span><span class=pl-kos>(</span><span class=pl-s>&quot;placeholder&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask-maxlength&quot;</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>removeAttr</span><span class=pl-kos>(</span><span class=pl-s>&quot;maxlength&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>destroyEvents</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-en>getCleanVal</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>setCaret</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-en>getCleanVal</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getMasked</span><span class=pl-kos>(</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-en>getMaskedVal</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getMasked</span><span class=pl-kos>(</span><span class=pl-c1>!</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-en>init</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>g</span><span class=pl-c1>||</span><span class=pl-c1>!</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-c1>||</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>clearIfNotMatch</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-kos>.</span><span class=pl-c1>clearIfNotMatch</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>byPassKeys</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-kos>.</span><span class=pl-c1>byPassKeys</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>translation</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>extend</span><span class=pl-kos>(</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-kos>.</span><span class=pl-c1>translation</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>translation</span><span class=pl-kos>)</span><span class=pl-kos>;</span>","<span class=pl-s1>l</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>extend</span><span class=pl-kos>(</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>l</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>k</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getRegexMask</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>events</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getMasked</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>else</span><span class=pl-kos>{</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>placeholder</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>attr</span><span class=pl-kos>(</span><span class=pl-s>&quot;placeholder&quot;</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>.</span><span class=pl-c1>placeholder</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask&quot;</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>attr</span><span class=pl-kos>(</span><span class=pl-s>&quot;autocomplete&quot;</span><span class=pl-kos>,</span><span class=pl-s>&quot;off&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-k>for</span><span class=pl-kos>(</span><span class=pl-k>var</span> <span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>&lt;</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>++</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>h</span><span class=pl-c1>=</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-c1>translation</span><span class=pl-kos>[</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-en>charAt</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-s1>h</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>h</span><span class=pl-kos>.</span><span class=pl-c1>recursive</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-c1>!</span><span class=pl-c1>1</span><span class=pl-kos>;</span><span class=pl-k>break</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-s1>f</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>attr</span><span class=pl-kos>(</span><span class=pl-s>&quot;maxlength&quot;</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>length</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask-maxlength&quot;</span><span class=pl-kos>,</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>destroyEvents</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>events</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>g</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getCaret</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>getMasked</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-en>setCaret</span><span class=pl-kos>(</span><span class=pl-s1>g</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>l</span><span class=pl-kos>.</span><span class=pl-en>init</span><span class=pl-kos>(</span><span class=pl-c1>!</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>is</span><span class=pl-kos>(</span><span class=pl-s>&quot;input&quot;</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>maskWatchers</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-en>f</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>attr</span><span class=pl-kos>(</span><span class=pl-s>&quot;data-mask&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span>","<span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>attr</span><span class=pl-kos>(</span><span class=pl-s>&quot;data-mask-reverse&quot;</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>reverse</span><span class=pl-c1>=</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>attr</span><span class=pl-kos>(</span><span class=pl-s>&quot;data-mask-clearifnotmatch&quot;</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>clearIfNotMatch</span><span class=pl-c1>=</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s>&quot;true&quot;</span><span class=pl-c1>===</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>attr</span><span class=pl-kos>(</span><span class=pl-s>&quot;data-mask-selectonfocus&quot;</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>selectOnFocus</span><span class=pl-c1>=</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-en>p</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask&quot;</span><span class=pl-kos>,</span><span class=pl-k>new</span> <span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>p</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>e</span><span class=pl-c1>||</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-c1>JSON</span><span class=pl-kos>.</span><span class=pl-c1>stringify</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>val</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>text</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>try</span><span class=pl-kos>{</span><span class=pl-k>return</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>d</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s>&quot;object&quot;</span><span class=pl-c1>!==</span><span class=pl-k>typeof</span> <span class=pl-s1>c</span><span class=pl-c1>||</span><span class=pl-s1>f</span><span class=pl-kos>(</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>options</span><span class=pl-kos>)</span><span class=pl-c1>!==</span><span class=pl-s1>f</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-c1>||</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>mask</span><span class=pl-c1>!==</span><span class=pl-s1>d</span><span class=pl-kos>}</span><span class=pl-k>catch</span><span class=pl-kos>(</span><span class=pl-s1>w</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>k</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-smi>document</span><span class=pl-kos>.</span><span class=pl-en>createElement</span><span class=pl-kos>(</span><span class=pl-s>&quot;div&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-c1>=</span><span class=pl-s>&quot;on&quot;</span><span class=pl-c1>+</span><span class=pl-s1>a</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s1>a</span> <span class=pl-k>in</span> <span class=pl-s1>b</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>||</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>setAttribute</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>,</span>","<span class=pl-s>&quot;return;&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-s>&quot;function&quot;</span><span class=pl-c1>===</span><span class=pl-k>typeof</span> <span class=pl-s1>b</span><span class=pl-kos>[</span><span class=pl-s1>a</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-s1>e</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fn</span><span class=pl-kos>.</span><span class=pl-en>mask</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>d</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-c1>||</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-s1>e</span><span class=pl-c1>=</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>selector</span><span class=pl-kos>,</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-c1>=</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>watchInterval</span><span class=pl-kos>;</span><span class=pl-s1>c</span><span class=pl-c1>=</span><span class=pl-s1>d</span><span class=pl-kos>.</span><span class=pl-c1>watchInputs</span><span class=pl-c1>||</span><span class=pl-s1>c</span><span class=pl-kos>.</span><span class=pl-c1>watchInputs</span><span class=pl-kos>;</span><span class=pl-k>var</span> <span class=pl-en>k</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>if</span><span class=pl-kos>(</span><span class=pl-en>p</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-k>return</span> <span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask&quot;</span><span class=pl-kos>,</span><span class=pl-k>new</span> <span class=pl-en>n</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>,</span><span class=pl-s1>b</span><span class=pl-kos>,</span><span class=pl-s1>d</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>each</span><span class=pl-kos>(</span><span class=pl-en>k</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>e</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s>&quot;&quot;</span><span class=pl-c1>!==</span><span class=pl-s1>e</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>c</span><span class=pl-c1>&amp;&amp;</span><span class=pl-kos>(</span><span class=pl-en>clearInterval</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>maskWatchers</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>maskWatchers</span><span class=pl-kos>[</span><span class=pl-s1>e</span><span class=pl-kos>]</span><span class=pl-c1>=</span><span class=pl-en>setInterval</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-smi>document</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>find</span><span class=pl-kos>(</span><span class=pl-s1>e</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>each</span><span class=pl-kos>(</span><span class=pl-en>k</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s1>f</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fn</span><span class=pl-kos>.</span><span class=pl-en>masked</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask&quot;</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>getMaskedVal</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fn</span><span class=pl-kos>.</span><span class=pl-en>unmask</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-en>clearInterval</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>maskWatchers</span><span class=pl-kos>[</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>selector</span><span class=pl-kos>]</span><span class=pl-kos>)</span><span class=pl-kos>;</span>","<span class=pl-k>delete</span> <span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>maskWatchers</span><span class=pl-kos>[</span><span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-c1>selector</span><span class=pl-kos>]</span><span class=pl-kos>;</span><span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>each</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>var</span> <span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-smi>this</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask&quot;</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-s1>b</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>b</span><span class=pl-kos>.</span><span class=pl-en>remove</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>removeData</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask&quot;</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>fn</span><span class=pl-kos>.</span><span class=pl-en>cleanVal</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-k>return</span> <span class=pl-smi>this</span><span class=pl-kos>.</span><span class=pl-en>data</span><span class=pl-kos>(</span><span class=pl-s>&quot;mask&quot;</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>getCleanVal</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>applyDataMask</span><span class=pl-c1>=</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>b</span><span class=pl-c1>=</span><span class=pl-s1>b</span><span class=pl-c1>||</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-kos>.</span><span class=pl-c1>maskElements</span><span class=pl-kos>;</span><span class=pl-kos>(</span><span class=pl-s1>b</span> <span class=pl-k>instanceof</span> <span class=pl-s1>a</span>?<span class=pl-s1>b</span>:<span class=pl-s1>a</span><span class=pl-kos>(</span><span class=pl-s1>b</span><span class=pl-kos>)</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>filter</span><span class=pl-kos>(</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-kos>.</span><span class=pl-c1>dataMaskAttr</span><span class=pl-kos>)</span><span class=pl-kos>.</span><span class=pl-en>each</span><span class=pl-kos>(</span><span class=pl-en>f</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-en>k</span><span class=pl-c1>=</span><span class=pl-kos>{</span><span class=pl-c1>maskElements</span>:<span class=pl-s>&quot;input,td,span,div&quot;</span><span class=pl-kos>,</span><span class=pl-c1>dataMaskAttr</span>:<span class=pl-s>&quot;*[data-mask]&quot;</span><span class=pl-kos>,</span><span class=pl-c1>dataMask</span>:<span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>watchInterval</span>:<span class=pl-c1>300</span><span class=pl-kos>,</span><span class=pl-c1>watchInputs</span>:<span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-c1>keyStrokeCompensation</span>:<span class=pl-c1>10</span><span class=pl-kos>,</span><span class=pl-c1>useInput</span>:<span class=pl-c1>!</span><span class=pl-pds><span class=pl-c1>/</span>Chrome<span class=pl-cce>\\/</span><span class=pl-kos>[</span>2-4<span class=pl-kos>]</span><span class=pl-kos>[</span>0-9<span class=pl-kos>]</span><span class=pl-c1>|</span>SamsungBrowser<span class=pl-c1>/</span></span><span class=pl-kos>.</span><span class=pl-en>test</span><span class=pl-kos>(</span><span class=pl-smi>window</span><span class=pl-kos>.</span><span class=pl-c1>navigator</span><span class=pl-kos>.</span><span class=pl-c1>userAgent</span><span class=pl-kos>)</span><span class=pl-c1>&amp;&amp;</span>","<span class=pl-en>k</span><span class=pl-kos>(</span><span class=pl-s>&quot;input&quot;</span><span class=pl-kos>)</span><span class=pl-kos>,</span><span class=pl-c1>watchDataMask</span>:<span class=pl-c1>!</span><span class=pl-c1>1</span><span class=pl-kos>,</span><span class=pl-c1>byPassKeys</span>:<span class=pl-kos>[</span><span class=pl-c1>9</span><span class=pl-kos>,</span><span class=pl-c1>16</span><span class=pl-kos>,</span><span class=pl-c1>17</span><span class=pl-kos>,</span><span class=pl-c1>18</span><span class=pl-kos>,</span><span class=pl-c1>36</span><span class=pl-kos>,</span><span class=pl-c1>37</span><span class=pl-kos>,</span><span class=pl-c1>38</span><span class=pl-kos>,</span><span class=pl-c1>39</span><span class=pl-kos>,</span><span class=pl-c1>40</span><span class=pl-kos>,</span><span class=pl-c1>91</span><span class=pl-kos>]</span><span class=pl-kos>,</span><span class=pl-c1>translation</span>:<span class=pl-kos>{</span><span class=pl-c1>0</span>:<span class=pl-kos>{</span><span class=pl-c1>pattern</span>:<span class=pl-pds><span class=pl-c1>/</span><span class=pl-cce>\\d</span><span class=pl-c1>/</span></span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>9</span>:<span class=pl-kos>{</span><span class=pl-c1>pattern</span>:<span class=pl-pds><span class=pl-c1>/</span><span class=pl-cce>\\d</span><span class=pl-c1>/</span></span><span class=pl-kos>,</span><span class=pl-c1>optional</span>:<span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-s>&quot;#&quot;</span>:<span class=pl-kos>{</span><span class=pl-c1>pattern</span>:<span class=pl-pds><span class=pl-c1>/</span><span class=pl-cce>\\d</span><span class=pl-c1>/</span></span><span class=pl-kos>,</span><span class=pl-c1>recursive</span>:<span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>A</span>:<span class=pl-kos>{</span><span class=pl-c1>pattern</span>:<span class=pl-pds><span class=pl-c1>/</span><span class=pl-kos>[</span>a-zA-Z0-9<span class=pl-kos>]</span><span class=pl-c1>/</span></span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-c1>S</span>:<span class=pl-kos>{</span><span class=pl-c1>pattern</span>:<span class=pl-pds><span class=pl-c1>/</span><span class=pl-kos>[</span>a-zA-Z<span class=pl-kos>]</span><span class=pl-c1>/</span></span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-c1>||</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>;</span><span class=pl-en>k</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-c1>=</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>extend</span><span class=pl-kos>(</span><span class=pl-c1>!</span><span class=pl-c1>0</span><span class=pl-kos>,</span><span class=pl-kos>{</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>k</span><span class=pl-kos>,</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>k</span><span class=pl-kos>.</span><span class=pl-c1>dataMask</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>applyDataMask</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>;</span><span class=pl-en>setInterval</span><span class=pl-kos>(</span><span class=pl-k>function</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>{</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-c1>jMaskGlobals</span><span class=pl-kos>.</span><span class=pl-c1>watchDataMask</span><span class=pl-c1>&amp;&amp;</span><span class=pl-s1>a</span><span class=pl-kos>.</span><span class=pl-en>applyDataMask</span><span class=pl-kos>(</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-en>k</span><span class=pl-kos>.</span><span class=pl-c1>watchInterval</span><span class=pl-kos>)</span><span class=pl-kos>}</span><span class=pl-kos>,</span><span class=pl-smi>window</span><span class=pl-kos>.</span><span class=pl-c1>jQuery</span><span class=pl-kos>,</span><span class=pl-smi>window</span><span class=pl-kos>.</span><span class=pl-c1>Zepto</span><span class=pl-kos>)</span><span class=pl-kos>;</span>"],"stylingDirectives":null,"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/igorescobar/jQuery-Mask-Plugin/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null,"repoAlertsPath":"/igorescobar/jQuery-Mask-Plugin/security/dependabot","repoSecurityAndAnalysisPath":"/igorescobar/jQuery-Mask-Plugin/settings/security_analysis","repoOwnerIsOrg":false,"currentUserCanAdminRepo":false},"displayName":"jquery.mask.min.js","displayUrl":"https://github.com/igorescobar/jQuery-Mask-Plugin/blob/master/dist/jquery.mask.min.js?raw=true","headerInfo":{"blobSize":"8.13 KB","deleteInfo":{"deletePath":null,"deleteTooltip":"You must be signed in to make or propose changes"},"editInfo":{"editTooltip":"You must be signed in to make or propose changes"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"1f22376","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Figorescobar%2FjQuery-Mask-Plugin%2Fblob%2Fmaster%2Fdist%2Fjquery.mask.min.js","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"19","truncatedSloc":"19"},"mode":"file"},"image":false,"isCodeownersFile":null,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"JavaScript","large":false,"loggedIn":false,"newDiscussionPath":"/igorescobar/jQuery-Mask-Plugin/discussions/new","newIssuePath":"/igorescobar/jQuery-Mask-Plugin/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/igorescobar/jQuery-Mask-Plugin/blob/master/dist/jquery.mask.min.js","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/igorescobar/jQuery-Mask-Plugin/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"igorescobar","repoName":"jQuery-Mask-Plugin","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":false,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timedOut":false,"notAnalyzed":false,"symbols":[{"name":"findInternal","kind":"function","identStart":125,"identEnd":137,"extentStart":117,"extentEnd":289,"fullyQualifiedName":"findInternal","identUtf16":{"start":{"lineNumber":2,"utf16Col":49},"end":{"lineNumber":2,"utf16Col":61}},"extentUtf16":{"start":{"lineNumber":2,"utf16Col":41},"end":{"lineNumber":2,"utf16Col":213}}},{"name":"getGlobal","kind":"function","identStart":600,"identEnd":609,"extentStart":592,"extentEnd":719,"fullyQualifiedName":"getGlobal","identUtf16":{"start":{"lineNumber":3,"utf16Col":189},"end":{"lineNumber":3,"utf16Col":198}},"extentUtf16":{"start":{"lineNumber":3,"utf16Col":181},"end":{"lineNumber":3,"utf16Col":308}}},{"name":"polyfill","kind":"function","identStart":768,"identEnd":776,"extentStart":760,"extentEnd":1007,"fullyQualifiedName":"polyfill","identUtf16":{"start":{"lineNumber":4,"utf16Col":8},"end":{"lineNumber":4,"utf16Col":16}},"extentUtf16":{"start":{"lineNumber":4,"utf16Col":0},"end":{"lineNumber":4,"utf16Col":247}}},{"name":"n","kind":"function","identStart":1335,"identEnd":1336,"extentStart":1335,"extentEnd":6222,"fullyQualifiedName":"n","identUtf16":{"start":{"lineNumber":5,"utf16Col":194},"end":{"lineNumber":5,"utf16Col":195}},"extentUtf16":{"start":{"lineNumber":5,"utf16Col":194},"end":{"lineNumber":14,"utf16Col":438}}},{"name":"getCaret","kind":"function","identStart":1371,"identEnd":1379,"extentStart":1371,"extentEnd":1628,"fullyQualifiedName":"getCaret","identUtf16":{"start":{"lineNumber":5,"utf16Col":230},"end":{"lineNumber":5,"utf16Col":238}},"extentUtf16":{"start":{"lineNumber":5,"utf16Col":230},"end":{"lineNumber":5,"utf16Col":487}}},{"name":"setCaret","kind":"function","identStart":1629,"identEnd":1637,"extentStart":1629,"extentEnd":1859,"fullyQualifiedName":"setCaret","identUtf16":{"start":{"lineNumber":5,"utf16Col":488},"end":{"lineNumber":5,"utf16Col":496}},"extentUtf16":{"start":{"lineNumber":5,"utf16Col":488},"end":{"lineNumber":6,"utf16Col":179}}},{"name":"events","kind":"function","identStart":1860,"identEnd":1866,"extentStart":1860,"extentEnd":2572,"fullyQualifiedName":"events","identUtf16":{"start":{"lineNumber":6,"utf16Col":180},"end":{"lineNumber":6,"utf16Col":186}},"extentUtf16":{"start":{"lineNumber":6,"utf16Col":180},"end":{"lineNumber":7,"utf16Col":349}}},{"name":"getRegexMask","kind":"function","identStart":2573,"identEnd":2585,"extentStart":2573,"extentEnd":3033,"fullyQualifiedName":"getRegexMask","identUtf16":{"start":{"lineNumber":7,"utf16Col":350},"end":{"lineNumber":7,"utf16Col":362}},"extentUtf16":{"start":{"lineNumber":7,"utf16Col":350},"end":{"lineNumber":8,"utf16Col":300}}},{"name":"destroyEvents","kind":"function","identStart":3034,"identEnd":3047,"extentStart":3034,"extentEnd":3140,"fullyQualifiedName":"destroyEvents","identUtf16":{"start":{"lineNumber":8,"utf16Col":301},"end":{"lineNumber":8,"utf16Col":314}},"extentUtf16":{"start":{"lineNumber":8,"utf16Col":301},"end":{"lineNumber":8,"utf16Col":407}}},{"name":"val","kind":"function","identStart":3141,"identEnd":3144,"extentStart":3141,"extentEnd":3263,"fullyQualifiedName":"val","identUtf16":{"start":{"lineNumber":8,"utf16Col":408},"end":{"lineNumber":8,"utf16Col":411}},"extentUtf16":{"start":{"lineNumber":8,"utf16Col":408},"end":{"lineNumber":9,"utf16Col":27}}},{"name":"calculateCaretPosition","kind":"function","identStart":3264,"identEnd":3286,"extentStart":3264,"extentEnd":3730,"fullyQualifiedName":"calculateCaretPosition","identUtf16":{"start":{"lineNumber":9,"utf16Col":28},"end":{"lineNumber":9,"utf16Col":50}},"extentUtf16":{"start":{"lineNumber":9,"utf16Col":28},"end":{"lineNumber":9,"utf16Col":494}}},{"name":"behaviour","kind":"function","identStart":3731,"identEnd":3740,"extentStart":3731,"extentEnd":4066,"fullyQualifiedName":"behaviour","identUtf16":{"start":{"lineNumber":9,"utf16Col":495},"end":{"lineNumber":9,"utf16Col":504}},"extentUtf16":{"start":{"lineNumber":9,"utf16Col":495},"end":{"lineNumber":10,"utf16Col":310}}},{"name":"getMasked","kind":"function","identStart":4067,"identEnd":4076,"extentStart":4067,"extentEnd":4781,"fullyQualifiedName":"getMasked","identUtf16":{"start":{"lineNumber":10,"utf16Col":311},"end":{"lineNumber":10,"utf16Col":320}},"extentUtf16":{"start":{"lineNumber":10,"utf16Col":311},"end":{"lineNumber":12,"utf16Col":14}}},{"name":"A","kind":"function","identStart":4238,"identEnd":4239,"extentStart":4238,"extentEnd":4269,"fullyQualifiedName":"A","identUtf16":{"start":{"lineNumber":10,"utf16Col":482},"end":{"lineNumber":10,"utf16Col":483}},"extentUtf16":{"start":{"lineNumber":10,"utf16Col":482},"end":{"lineNumber":11,"utf16Col":8}}},{"name":"A","kind":"function","identStart":4281,"identEnd":4282,"extentStart":4281,"extentEnd":4310,"fullyQualifiedName":"A","identUtf16":{"start":{"lineNumber":11,"utf16Col":20},"end":{"lineNumber":11,"utf16Col":21}},"extentUtf16":{"start":{"lineNumber":11,"utf16Col":20},"end":{"lineNumber":11,"utf16Col":49}}},{"name":"mapMaskdigitPositions","kind":"function","identStart":4782,"identEnd":4803,"extentStart":4782,"extentEnd":4917,"fullyQualifiedName":"mapMaskdigitPositions","identUtf16":{"start":{"lineNumber":12,"utf16Col":15},"end":{"lineNumber":12,"utf16Col":36}},"extentUtf16":{"start":{"lineNumber":12,"utf16Col":15},"end":{"lineNumber":12,"utf16Col":150}}},{"name":"callbacks","kind":"function","identStart":4918,"identEnd":4927,"extentStart":4918,"extentEnd":5181,"fullyQualifiedName":"callbacks","identUtf16":{"start":{"lineNumber":12,"utf16Col":151},"end":{"lineNumber":12,"utf16Col":160}},"extentUtf16":{"start":{"lineNumber":12,"utf16Col":151},"end":{"lineNumber":12,"utf16Col":414}}},{"name":"l","kind":"function","identStart":4974,"identEnd":4975,"extentStart":4974,"extentEnd":5040,"fullyQualifiedName":"l","identUtf16":{"start":{"lineNumber":12,"utf16Col":207},"end":{"lineNumber":12,"utf16Col":208}},"extentUtf16":{"start":{"lineNumber":12,"utf16Col":207},"end":{"lineNumber":12,"utf16Col":273}}},{"name":"remove","kind":"function","identStart":5285,"identEnd":5291,"extentStart":5283,"extentEnd":5489,"fullyQualifiedName":"remove","identUtf16":{"start":{"lineNumber":13,"utf16Col":16},"end":{"lineNumber":13,"utf16Col":22}},"extentUtf16":{"start":{"lineNumber":13,"utf16Col":14},"end":{"lineNumber":13,"utf16Col":220}}},{"name":"getCleanVal","kind":"function","identStart":5492,"identEnd":5503,"extentStart":5490,"extentEnd":5538,"fullyQualifiedName":"getCleanVal","identUtf16":{"start":{"lineNumber":13,"utf16Col":223},"end":{"lineNumber":13,"utf16Col":234}},"extentUtf16":{"start":{"lineNumber":13,"utf16Col":221},"end":{"lineNumber":13,"utf16Col":269}}},{"name":"getMaskedVal","kind":"function","identStart":5541,"identEnd":5553,"extentStart":5539,"extentEnd":5591,"fullyQualifiedName":"getMaskedVal","identUtf16":{"start":{"lineNumber":13,"utf16Col":272},"end":{"lineNumber":13,"utf16Col":284}},"extentUtf16":{"start":{"lineNumber":13,"utf16Col":270},"end":{"lineNumber":13,"utf16Col":322}}},{"name":"init","kind":"function","identStart":5594,"identEnd":5598,"extentStart":5592,"extentEnd":6198,"fullyQualifiedName":"init","identUtf16":{"start":{"lineNumber":13,"utf16Col":325},"end":{"lineNumber":13,"utf16Col":329}},"extentUtf16":{"start":{"lineNumber":13,"utf16Col":323},"end":{"lineNumber":14,"utf16Col":414}}},{"name":"f","kind":"function","identStart":6245,"identEnd":6246,"extentStart":6245,"extentEnd":6519,"fullyQualifiedName":"f","identUtf16":{"start":{"lineNumber":14,"utf16Col":461},"end":{"lineNumber":14,"utf16Col":462}},"extentUtf16":{"start":{"lineNumber":14,"utf16Col":461},"end":{"lineNumber":15,"utf16Col":219}}},{"name":"p","kind":"function","identStart":6520,"identEnd":6521,"extentStart":6520,"extentEnd":6719,"fullyQualifiedName":"p","identUtf16":{"start":{"lineNumber":15,"utf16Col":220},"end":{"lineNumber":15,"utf16Col":221}},"extentUtf16":{"start":{"lineNumber":15,"utf16Col":220},"end":{"lineNumber":15,"utf16Col":419}}},{"name":"k","kind":"function","identStart":6720,"identEnd":6721,"extentStart":6720,"extentEnd":6862,"fullyQualifiedName":"k","identUtf16":{"start":{"lineNumber":15,"utf16Col":420},"end":{"lineNumber":15,"utf16Col":421}},"extentUtf16":{"start":{"lineNumber":15,"utf16Col":420},"end":{"lineNumber":16,"utf16Col":48}}},{"name":"mask","kind":"function","identStart":6868,"identEnd":6872,"extentStart":6863,"extentEnd":7208,"fullyQualifiedName":"mask","identUtf16":{"start":{"lineNumber":16,"utf16Col":54},"end":{"lineNumber":16,"utf16Col":58}},"extentUtf16":{"start":{"lineNumber":16,"utf16Col":49},"end":{"lineNumber":16,"utf16Col":394}}},{"name":"k","kind":"function","identStart":6985,"identEnd":6986,"extentStart":6985,"extentEnd":7057,"fullyQualifiedName":"k","identUtf16":{"start":{"lineNumber":16,"utf16Col":171},"end":{"lineNumber":16,"utf16Col":172}},"extentUtf16":{"start":{"lineNumber":16,"utf16Col":171},"end":{"lineNumber":16,"utf16Col":243}}},{"name":"masked","kind":"function","identStart":7214,"identEnd":7220,"extentStart":7209,"extentEnd":7274,"fullyQualifiedName":"masked","identUtf16":{"start":{"lineNumber":16,"utf16Col":400},"end":{"lineNumber":16,"utf16Col":406}},"extentUtf16":{"start":{"lineNumber":16,"utf16Col":395},"end":{"lineNumber":16,"utf16Col":460}}},{"name":"unmask","kind":"function","identStart":7280,"identEnd":7286,"extentStart":7275,"extentEnd":7471,"fullyQualifiedName":"unmask","identUtf16":{"start":{"lineNumber":16,"utf16Col":466},"end":{"lineNumber":16,"utf16Col":472}},"extentUtf16":{"start":{"lineNumber":16,"utf16Col":461},"end":{"lineNumber":17,"utf16Col":127}}},{"name":"cleanVal","kind":"function","identStart":7477,"identEnd":7485,"extentStart":7472,"extentEnd":7536,"fullyQualifiedName":"cleanVal","identUtf16":{"start":{"lineNumber":17,"utf16Col":133},"end":{"lineNumber":17,"utf16Col":141}},"extentUtf16":{"start":{"lineNumber":17,"utf16Col":128},"end":{"lineNumber":17,"utf16Col":192}}},{"name":"applyDataMask","kind":"function","identStart":7539,"identEnd":7552,"extentStart":7537,"extentEnd":7666,"fullyQualifiedName":"applyDataMask","identUtf16":{"start":{"lineNumber":17,"utf16Col":195},"end":{"lineNumber":17,"utf16Col":208}},"extentUtf16":{"start":{"lineNumber":17,"utf16Col":193},"end":{"lineNumber":17,"utf16Col":322}}}]}},"csrf_tokens":{"/igorescobar/jQuery-Mask-Plugin/branches":{"post":"cRuVqZ-IWPK8fzp7Ag8wwsRK3eiJgb6C-Yi5HxR4pJpyF2E8tGbuRzT3bTqFLvYJUhIBtTVsTBlSXZJn-ysJBg"}}},"title":"jQuery-Mask-Plugin/dist/jquery.mask.min.js at master · igorescobar/jQuery-Mask-Plugin","locale":"en"}